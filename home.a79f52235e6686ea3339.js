(()=>{"use strict";var e,o;e=document.querySelectorAll(".services-block"),o=document.querySelectorAll(".services-item__show"),e.forEach((function(e,r){e.addEventListener("mouseover",(function(){Array.from(o).forEach((function(e){e!==o[r]&&e.classList.remove("show")}));var e=o[r];e&&(e.classList.add("show"),setTimeout((function(){e.classList.remove("show")}),2500))}))}));var r,t,n,c,s,i,u,a=document.querySelectorAll(".animation"),l=new IntersectionObserver((function(e,o){e.forEach((function(e){e.isIntersecting&&(e.target.classList.add("anim"),o.unobserve(e.target))}))}),{rootMargin:"0px",threshold:.5});function f(e,o,r){e.forEach((function(e){"add"===o?e.classList.add(r):e.classList.remove(r)}))}a.forEach((function(e){l.observe(e)})),r=document.querySelectorAll(".one-img"),t=document.querySelectorAll(".two-img"),n=document.querySelectorAll(".three-img"),c=document.querySelectorAll(".four-img"),s=document.querySelectorAll(".slide-img"),i=document.querySelectorAll(".swiper"),u={},i.forEach((function(e){u[e.dataset.id]=e})),s.forEach((function(e){if(u[e.dataset.id]){var o=e.closest(".swiper-slide"),s=Array.from(r).filter((function(e){return e.closest(".swiper-slide")===o})),i=Array.from(t).filter((function(e){return e.closest(".swiper-slide")===o})),a=Array.from(n).filter((function(e){return e.closest(".swiper-slide")===o})),l=Array.from(c).filter((function(e){return e.closest(".swiper-slide")===o}));a.forEach((function(e){["mouseover","mouseout"].forEach((function(o){e.addEventListener(o,(function(){f(s,"mouseover"===o?"add":"remove","active")}))}))})),l.forEach((function(e){["mouseover","mouseout"].forEach((function(o){e.addEventListener(o,(function(){f(i,"mouseover"===o?"add":"remove","active")}))}))})),i.forEach((function(e){["mouseover","mouseout"].forEach((function(o){e.addEventListener(o,(function(){f(l,"mouseover"===o?"add":"remove","active"),f(s,"mouseover"===o?"add":"remove","active"),f(a,"mouseover"===o?"add":"remove","active")}))}))}))}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,